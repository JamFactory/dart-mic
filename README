// =============================================================================
// Who are we?
// =============================================================================
We are Max Deibel (deibel.max@gmail.com) and Patrick Yukman 
(contact@patrickyukman.com). We created this library as a stand-alone project, 
but it was motivated by our work on our senior project at Dartmouth College: 
VoxTrainer [insert link here].

// =============================================================================
// About the library
// =============================================================================
This is a Javascript library which listens to microphone input and performs 
pitch/note detection, volume detection, recording, and general purpose data 
processing. It makes use of the Web Audio APi (which is only supported by Chrome
currently) and DSP.js.

// =============================================================================
// General usage
// =============================================================================
1. Create Microphone object ("mic").
2. Any function defined as "this.foo = function(param) { ... }" can then be 
	 called via the Microphone object.
	 Example: "mic.foo(param)"

// =============================================================================
// Function list (see "Function descriptions" for more details)
// =============================================================================
Microphone Setup:
	-Callable functions:
		-this.initialize
		-this.startListening
		-this.stopListening
	-Helper functions:
		-gotStream
		-noStream
General Purpose:
	-Callable functions:
		-this.getMaxInputAmplitude
		-this.getFreq
		-this.getNote
		-this.getNoteCents
	-Helper functions:
		-matchNote
Autocorrelation:
	-Callable functions:
	-Helper functions:
		-autocorrelate
		-getPeakPeriodicity
		-computeFreqFromAutocorr
		-getNoteFromAutocorr
		-getNoteCentsFromAutocorr
FFT:
	-Callable Functions:
	-Helper Functions:
		-computeFreqFromFFT
		-jainsMethodInterpolate
		-getNoteFromFFT
		-getNoteCentsFromFFT
Testing and Debugging:
	-Callable Functions:
		-this.logData
	-Helper Functions:
		-destroyClickedElement

// =============================================================================
// Function descriptions
// =============================================================================

this.initialize
// initialize function. Properly initializes the parameters of a Microphone 
// object, defines the frequency-->note lookup table, and calls getUserMedia
// to request browser-level access to a user's microphone. In general, do not
// change any part of this initialize function without a compelling reason.
//
// Example: mic.initialize()

this.startListening
// startListening function. Connects the microphone input to a processing node
// for future operations. Throws an error if the microphone hasn't been
// initialized before this function is called -- in other words, if a user
// tries to get mic data before allowing the browser permission to collect it.
//
// Example: mic.startListening()

gotStream
// gotStream function. This function is the success callback for getUserMedia
// and initializes the Web Audio API / DSP.JS structures that allow us to
// manipulate the data streaming in off the microphone.

noStream
// noStream function. This function is the failure callback for getUserMedia
// and alerts the user if their browser doesn't support getUserMedia.
